+ bashly generate
creating user files in src
skipped src/initialize.sh (exists)
skipped src/completions_command.sh (exists)
skipped src/download_command.sh (exists)
skipped src/upload_command.sh (exists)
created ./cli
run ./cli --help to test your bash script
+ ./cli
cli - Sample application with bash completions

Usage:
  cli [command]
  cli [command] --help | -h
  cli --version | -v

Commands:
  completions   Generate bash completions
  download      Download a file
  upload        Upload a file

+ ./cli -h
cli - Sample application with bash completions

Usage:
  cli [command]
  cli [command] --help | -h
  cli --version | -v

Commands:
  completions   Generate bash completions
  download      Download a file
  upload        Upload a file

Options:
  --help, -h
    Show this help

  --version, -v
    Show version number

+ ./cli completions -h
cli completions

  Generate bash completions
  Usage: eval "$(cli completions)"

Usage:
  cli completions
  cli completions --help | -h

Options:
  --help, -h
    Show this help

+ ./cli completions
#!/usr/bin/env bash

# This bash completions script was generated by
# completely (https://github.com/dannyben/completely)
# Modifying it manually is not recommended
_cli_completions() {
  local cur=${COMP_WORDS[COMP_CWORD]}

  case "$COMP_LINE" in
    'cli download'*) COMPREPLY=($(compgen -W "--force --help -f -h" -- "$cur")) ;;
    'cli upload'*) COMPREPLY=($(compgen -W "--help --password --user -h -p -u" -- "$cur")) ;;
    'cli'*) COMPREPLY=($(compgen -W "--help --version -h -v download upload" -- "$cur")) ;;
  esac
}

complete -F _cli_completions cli
